name: Plan Terraform Changes

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

permissions:
  id-token: write     # This is required for requesting the JWT
  contents: read      # This is required for actions/checkout
  pull-requests: write # This is required for commenting on PRs

jobs:
  tf-fmt-checks:
    name: Terraform Format Checks
    runs-on: ubuntu-latest

    steps:
      # Checkout Repository
      - name : Check out Git Repository
        uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.2

      # Terraform Format Check
      - name: Run Terraform Format Check
        run: terraform fmt -check -recursive

  tf-lint-checks:
    name: Tflint Checks on Terraform Code
    runs-on: ubuntu-latest

    steps:
      # Checkout Repository
      - name : Check out Git Repository
        uses: actions/checkout@v3  

      # TFLint - Terraform Check
      - uses: actions/cache@v4
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

      - uses: terraform-linters/setup-tflint@v4
        name: Setup TFLint
        with:
          github_token: ${{ secrets.CI_GITHUB_TOKEN }}
        
      # Print TFLint version
      - name: Show version
        run: tflint --version

      # Install plugins
      - name: Init TFLint
        run: tflint --init

      # Run tflint command in each directory recursively # use --force if you want to continue with workflow although errors are there
      - name: Run TFLint
        run: tflint -f compact --recursive
  tf-sec-checks:
    name: Tfsec Checks on Terraform Code
    runs-on: ubuntu-latest

    steps:
      # Checkout Repository
      - name : Check out Git Repository
        uses: actions/checkout@v4

      # Tfsec - Security scanner for your Terraform code
      - name: Run Tfsec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          additional_args: --ignore-hcl-errors
          github_token: ${{ secrets.CI_GITHUB_TOKEN }}

  tf-checkov-checks:
    name: Checkov Checks on Terraform Code
    runs-on: ubuntu-latest

    steps:
      # Checkout Repository
      - name : Check out Git Repository
        uses: actions/checkout@v4

      # Checkov - Static code analysis tool for infrastructure-as-code
      - name: Run Checkov
        run: |
           docker run -t -v ${{ github.workspace }}:/tf --workdir /tf bridgecrew/checkov --directory /tf --skip-check CKV2_GHA_1

  tf-plan:
    name: Plan Terraform Changes
    runs-on: ubuntu-latest
    needs: [tf-fmt-checks, tf-lint-checks, tf-sec-checks, tf-checkov-checks]
    env:
      TF_VAR_GITHUB_ADMIN_TOKEN: ${{ secrets.TF_VAR_GITHUB_ADMIN_TOKEN}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.2

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: ${{ vars.IAM_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ vars.AWS_REGION }}

      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity

      - name: Terraform Init
        id: init
        run: terraform init -backend-config=bucket=${{vars.TF_VAR_BUCKET_NAME}}
        working-directory: backend-aws-s3

      - name: Terraform Validate
        id: validate
        run: terraform validate
        working-directory: backend-aws-s3

      - name: Run Terraform Plan
        run: terraform plan
        working-directory: backend-aws-s3

  after-plan:
    name: Notify Terraform Plan Result
    runs-on: ubuntu-latest
    needs:
      - tf-plan
    steps:
      - name: Notify terraform plan result as PR comment
        uses: kota65535/github-terraform-plan-comment-action@v2.0.1
        with:
          plan-job: Plan Terraform Changes
          plan-step: Run Terraform Plan